@page "/localidades"
@using System.Diagnostics
@inject IGenericService<Localidad> LocalidadService
@inject ILogger<Localidades> logger
@inject SweetAlertService  SweetAlert 


<HeaderPage TitlePage="Localidades" />

@if (localidades == null)
{
    <p><em>Obteniendo lista de localidades...</em></p>
}
else
{
    <a href="/agregarlocalidad" class="btn btn-primary">Agregar Localidad</a>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var localidad in localidades)
            {
                <tr>
                    <td>@localidad.Id</td>
                    <td>@localidad.Nombre</td>
                    <td>
                        <a href="/editarlocalidad?IdLocalidadEditada=@localidad.Id">Editar</a>
                    </td>
                    <td>
                        <button title="Eliminar" class="btn btn-danger" @onclick="@(()=>Eliminar(localidad))">Eliminar</button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Localidad>? localidades ;

    protected override async Task OnInitializedAsync()
    {
        localidades = await LocalidadService.GetAllAsync(string.Empty);
        logger.LogInformation($"Localidades obtenidas {localidades?.Count}");
        
    }
    
    
    private async void Eliminar(Localidad localidad)
    {
        SweetAlertResult respuesta = await SweetAlert.FireAsync(new SweetAlertOptions
            {
                Title = "Borrando Localiad",
                Text = $"¿Está seguro que desea borrar a la localidad {localidad.Nombre}",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si, quiero borrarlo!",
                CancelButtonText = "No, espera"
            });
        if (respuesta.IsConfirmed)
        {
            logger.LogInformation($"Borrando localidad {localidad.Nombre}");
            await LocalidadService.DeleteAsync(localidad.Id);
            localidades = await LocalidadService.GetAllAsync(string.Empty);
            StateHasChanged();
        }
    }
}
